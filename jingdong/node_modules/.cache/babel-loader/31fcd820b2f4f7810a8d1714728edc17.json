{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    cartList: {\n      // 第一层级是商铺的id\n      1: {\n        // 第二层级是商品的id\n        // 第二层级的内容是：商品内容以及购物的数量count\n        111: {\n          _id: '1',\n          name: '番茄250g/份',\n          imgUrl: 'http://www.dell-lee.com/imgs/vue3/tomato.png',\n          sales: 10,\n          price: 33.6,\n          oldPrice: 40.2,\n          count: 1\n        },\n        222: {\n          _id: '2',\n          name: '宁夏砂瓜2~3斤',\n          imgUrl: 'http://www.dell-lee.com/imgs/vue3/cherry.png',\n          sales: 102,\n          price: 23.6,\n          oldPrice: 30.2,\n          count: 2\n        }\n      },\n      2: {}\n    }\n  },\n  getters: {},\n  mutations: {\n    // 两个参数，一个是store中的数据state，\n    // 另一个是传过来的数据，用payload表示\n    addItemToCart(state, payload) {\n      // 拿到state，payload之后，\n      // 就需要结合之前的数据结构往里面添加内容\n      const {\n        shopId,\n        productId,\n        productInfo\n      } = toRefs(payload);\n      console.log(shopId, productId, productInfo);\n    }\n\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","cartList","_id","name","imgUrl","sales","price","oldPrice","count","getters","mutations","addItemToCart","payload","shopId","productId","productInfo","toRefs","console","log","actions","modules"],"sources":["C:/Carrie/VVVVVue/jingdong/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    cartList: {\n      // 第一层级是商铺的id\n      1: {\n        // 第二层级是商品的id\n        // 第二层级的内容是：商品内容以及购物的数量count\n        111: {\n          _id: '1',\n          name: '番茄250g/份',\n          imgUrl: 'http://www.dell-lee.com/imgs/vue3/tomato.png',\n          sales: 10,\n          price: 33.6,\n          oldPrice: 40.2,\n          count: 1\n        },\n        222: {\n          _id: '2',\n          name: '宁夏砂瓜2~3斤',\n          imgUrl: 'http://www.dell-lee.com/imgs/vue3/cherry.png',\n          sales: 102,\n          price: 23.6,\n          oldPrice: 30.2,\n          count: 2\n        }\n      },\n      2: {\n\n      }\n    }\n  },\n  getters: {\n  },\n  mutations: {\n    // 两个参数，一个是store中的数据state，\n    // 另一个是传过来的数据，用payload表示\n    addItemToCart(state, payload) {\n      // 拿到state，payload之后，\n      // 就需要结合之前的数据结构往里面添加内容\n      const { shopId, productId, productInfo } = toRefs(payload)\n      console.log(shopId, productId, productInfo)\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACR;MACA,GAAG;QACD;QACA;QACA,KAAK;UACHC,GAAG,EAAE,GADF;UAEHC,IAAI,EAAE,UAFH;UAGHC,MAAM,EAAE,8CAHL;UAIHC,KAAK,EAAE,EAJJ;UAKHC,KAAK,EAAE,IALJ;UAMHC,QAAQ,EAAE,IANP;UAOHC,KAAK,EAAE;QAPJ,CAHJ;QAYD,KAAK;UACHN,GAAG,EAAE,GADF;UAEHC,IAAI,EAAE,UAFH;UAGHC,MAAM,EAAE,8CAHL;UAIHC,KAAK,EAAE,GAJJ;UAKHC,KAAK,EAAE,IALJ;UAMHC,QAAQ,EAAE,IANP;UAOHC,KAAK,EAAE;QAPJ;MAZJ,CAFK;MAwBR,GAAG;IAxBK;EADL,CADkB;EA+BzBC,OAAO,EAAE,EA/BgB;EAiCzBC,SAAS,EAAE;IACT;IACA;IACAC,aAAa,CAACX,KAAD,EAAQY,OAAR,EAAiB;MAC5B;MACA;MACA,MAAM;QAAEC,MAAF;QAAUC,SAAV;QAAqBC;MAArB,IAAqCC,MAAM,CAACJ,OAAD,CAAjD;MACAK,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAAoBC,SAApB,EAA+BC,WAA/B;IACD;;EARQ,CAjCc;EA2CzBI,OAAO,EAAE,EA3CgB;EA6CzBC,OAAO,EAAE;AA7CgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}