{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0321d2b2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"toast\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString($props.message), 1\n  /* TEXT */\n  );\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;uBAAXC,oBAAoC,KAApC,cAAoCC,iBAAfC,cAAe,CAApC,EAA4B;EAAA;EAA5B","names":["class","_createElementBlock","_toDisplayString","$props"],"sourceRoot":"","sources":["C:\\Carrie\\VVVVVue\\jingdong\\src\\components\\Toast.vue"],"sourcesContent":["<template>\r\n  <div class=\"toast\">{{message}}</div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive } from 'vue'\r\n\r\nexport default {\r\n  name: 'ToastView',\r\n  props: ['message'],\r\n}\r\n\r\nexport const useToastEffect = ()=>{\r\n  const toastData = reactive({\r\n    show: false,\r\n    toastMsg: ''\r\n  })\r\n  const {show, toastMsg} = toRefs(toastData)\r\n  const showToast = (msg)=>{\r\n    toastData.showToast = true\r\n    toastData.toastMsg = msg\r\n    setTimeout(()=>{\r\n      toastData.showToast = false\r\n      toastData.toastMsg = ''\r\n    },1500)\r\n  }\r\n  return {toastData,showToast}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.toast {\r\n  position: absolute;\r\n  padding: .09rem;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: rgba(0, 0, 0, .35);\r\n  border-radius: .05rem;\r\n  color: #fff;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}