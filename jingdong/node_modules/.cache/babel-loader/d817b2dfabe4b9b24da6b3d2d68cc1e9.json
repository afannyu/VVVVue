{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    cartList: {\n      // 第一层\n      shopId: {\n        shopName,\n        productList: {\n          productId: {}\n        }\n      }\n    }\n  },\n  getters: {},\n  mutations: {\n    // 两个参数，一个是store中的数据state，\n    // 另一个是传过来的数据，用payload表示\n    changeCartItem(state, payload) {\n      // 拿到state，payload之后，\n      // 就需要结合之前的数据结构往里面添加内容\n      const {\n        shopId,\n        productId,\n        productInfo,\n        num\n      } = payload;\n      let shopInfo = state.cartList[shopId];\n\n      if (!shopInfo) {\n        shopInfo = {};\n      }\n\n      let product = shopInfo[productId];\n\n      if (!product) {\n        product = productInfo;\n        product.count = 0;\n      }\n\n      product.count = product.count + num; // 只要往购物车中加东西了，商品选中状态就为true\n\n      if (payload.num > 0) {\n        product.check = true;\n      }\n\n      if (product.count < 0) {\n        product.count = 0;\n      }\n\n      shopInfo[productId] = product;\n      state.cartList[shopId] = shopInfo;\n    },\n\n    changeCartItemChecked(state, payload) {\n      const {\n        shopId,\n        productId\n      } = payload;\n      let product = state.cartList[shopId][productId];\n      product.check = !product.check;\n    },\n\n    clearCartProducts(state, payload) {\n      const {\n        shopId\n      } = payload;\n      state.cartList[shopId] = {};\n    },\n\n    allCheckProducts(state, payload) {\n      const {\n        shopId\n      } = payload;\n      const productList = state.cartList[shopId];\n\n      for (let i in productList) {\n        let product = productList[i];\n\n        if (!product.check) {\n          product.check = true;\n        }\n      }\n    }\n\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","cartList","shopId","shopName","productList","productId","getters","mutations","changeCartItem","payload","productInfo","num","shopInfo","product","count","check","changeCartItemChecked","clearCartProducts","allCheckProducts","i","actions","modules"],"sources":["C:/Carrie/VVVVVue/jingdong/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    cartList: {\n      // 第一层\n      shopId: {\n        shopName,\n        productList: {\n          productId: {\n\n          }\n        }\n      }\n    }\n  },\n  getters: {\n  },\n  mutations: {\n    // 两个参数，一个是store中的数据state，\n    // 另一个是传过来的数据，用payload表示\n    changeCartItem(state, payload) {\n      // 拿到state，payload之后，\n      // 就需要结合之前的数据结构往里面添加内容\n      const { shopId, productId, productInfo, num } = payload\n      let shopInfo = state.cartList[shopId]\n      if(!shopInfo) {\n        shopInfo = {}\n      }\n      let product = shopInfo[productId]\n      if(!product) {\n        product = productInfo;\n        product.count = 0\n      }\n      product.count = product.count + num\n      // 只要往购物车中加东西了，商品选中状态就为true\n      if(payload.num > 0) { product.check = true}\n      if(product.count < 0) { product.count = 0}\n      shopInfo[productId] = product\n      state.cartList[shopId] = shopInfo\n    },\n    changeCartItemChecked(state, payload) {\n      const { shopId, productId } = payload\n      let product = state.cartList[shopId][productId]\n      product.check = !product.check\n    },\n    clearCartProducts(state, payload) {\n      const { shopId } = payload\n      state.cartList[shopId] = {}\n    },\n    allCheckProducts(state,payload) {\n      const { shopId } = payload\n      const productList = state.cartList[shopId]\n      for(let i in productList) {\n        let product = productList[i]\n        if(!product.check){\n          product.check = true\n        }\n      }\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACR;MACAC,MAAM,EAAE;QACNC,QADM;QAENC,WAAW,EAAE;UACXC,SAAS,EAAE;QADA;MAFP;IAFA;EADL,CADkB;EAczBC,OAAO,EAAE,EAdgB;EAgBzBC,SAAS,EAAE;IACT;IACA;IACAC,cAAc,CAACR,KAAD,EAAQS,OAAR,EAAiB;MAC7B;MACA;MACA,MAAM;QAAEP,MAAF;QAAUG,SAAV;QAAqBK,WAArB;QAAkCC;MAAlC,IAA0CF,OAAhD;MACA,IAAIG,QAAQ,GAAGZ,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAf;;MACA,IAAG,CAACU,QAAJ,EAAc;QACZA,QAAQ,GAAG,EAAX;MACD;;MACD,IAAIC,OAAO,GAAGD,QAAQ,CAACP,SAAD,CAAtB;;MACA,IAAG,CAACQ,OAAJ,EAAa;QACXA,OAAO,GAAGH,WAAV;QACAG,OAAO,CAACC,KAAR,GAAgB,CAAhB;MACD;;MACDD,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACC,KAAR,GAAgBH,GAAhC,CAb6B,CAc7B;;MACA,IAAGF,OAAO,CAACE,GAAR,GAAc,CAAjB,EAAoB;QAAEE,OAAO,CAACE,KAAR,GAAgB,IAAhB;MAAqB;;MAC3C,IAAGF,OAAO,CAACC,KAAR,GAAgB,CAAnB,EAAsB;QAAED,OAAO,CAACC,KAAR,GAAgB,CAAhB;MAAkB;;MAC1CF,QAAQ,CAACP,SAAD,CAAR,GAAsBQ,OAAtB;MACAb,KAAK,CAACC,QAAN,CAAeC,MAAf,IAAyBU,QAAzB;IACD,CAtBQ;;IAuBTI,qBAAqB,CAAChB,KAAD,EAAQS,OAAR,EAAiB;MACpC,MAAM;QAAEP,MAAF;QAAUG;MAAV,IAAwBI,OAA9B;MACA,IAAII,OAAO,GAAGb,KAAK,CAACC,QAAN,CAAeC,MAAf,EAAuBG,SAAvB,CAAd;MACAQ,OAAO,CAACE,KAAR,GAAgB,CAACF,OAAO,CAACE,KAAzB;IACD,CA3BQ;;IA4BTE,iBAAiB,CAACjB,KAAD,EAAQS,OAAR,EAAiB;MAChC,MAAM;QAAEP;MAAF,IAAaO,OAAnB;MACAT,KAAK,CAACC,QAAN,CAAeC,MAAf,IAAyB,EAAzB;IACD,CA/BQ;;IAgCTgB,gBAAgB,CAAClB,KAAD,EAAOS,OAAP,EAAgB;MAC9B,MAAM;QAAEP;MAAF,IAAaO,OAAnB;MACA,MAAML,WAAW,GAAGJ,KAAK,CAACC,QAAN,CAAeC,MAAf,CAApB;;MACA,KAAI,IAAIiB,CAAR,IAAaf,WAAb,EAA0B;QACxB,IAAIS,OAAO,GAAGT,WAAW,CAACe,CAAD,CAAzB;;QACA,IAAG,CAACN,OAAO,CAACE,KAAZ,EAAkB;UAChBF,OAAO,CAACE,KAAR,GAAgB,IAAhB;QACD;MACF;IACF;;EAzCQ,CAhBc;EA2DzBK,OAAO,EAAE,EA3DgB;EA6DzBC,OAAO,EAAE;AA7DgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}