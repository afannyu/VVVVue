{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  // 异步加载\n  component: () => import('../views/home/Home')\n}, {\n  path: '/shop/:',\n  name: 'Shop',\n  component: () => import('../views/shop/Shop')\n}, {\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/login/Login'),\n  beforeEnter: (to, from, next) => {\n    const {\n      isLogin\n    } = localStorage;\n    isLogin ? next({\n      name: 'Home'\n    }) : next();\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: () => import('../views/register/Register'),\n  beforeEnter: (to, from, next) => {\n    const {\n      isLogin\n    } = localStorage;\n    isLogin ? next({\n      name: 'Home'\n    }) : next();\n  }\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n}); // to：表示即将跳转的页面\n\nrouter.beforeEach((to, from, next) => {\n  const {\n    isLogin\n  } = localStorage;\n  const {\n    name\n  } = to;\n  const isloginOrRegister = name === 'Login' || name === 'Register'; // 表示如果是登录或者注册页面的时候，也会给我们展示，\n  // 但是在进入登录或者注册之前会再次进行判断（代码逻辑写在各个路由项目里）\n\n  isLogin || isloginOrRegister ? next() : next({\n    name: 'Login'\n  });\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","routes","path","name","component","beforeEnter","to","from","next","isLogin","localStorage","router","history","beforeEach","isloginOrRegister"],"sources":["C:/Carrie/VVVVVue/jingdong/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    // 异步加载\n    component: ()=>import('../views/home/Home')\n  },\n  {\n    path: '/shop/:',\n    name: 'Shop',\n    component: ()=>import('../views/shop/Shop')\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: ()=>import('../views/login/Login'),\n    beforeEnter: (to, from, next) => {\n      const {isLogin} = localStorage;\n      isLogin ? next({name: 'Home'}) : next()\n    }\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: ()=>import('../views/register/Register'),\n    beforeEnter: (to, from, next) => {\n      const {isLogin} = localStorage;\n      isLogin ? next({name: 'Home'}) : next()\n    }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\n// to：表示即将跳转的页面\nrouter.beforeEach((to, from, next)=>{\n  const {isLogin} = localStorage;\n  const {name} = to;\n  const isloginOrRegister = (name === 'Login' || name === 'Register');\n  // 表示如果是登录或者注册页面的时候，也会给我们展示，\n  // 但是在进入登录或者注册之前会再次进行判断（代码逻辑写在各个路由项目里）\n  (isLogin || isloginOrRegister) ? next() : next({name: 'Login'})\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,oBAAvB,QAAmD,YAAnD;AAEA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GADR;EAEEC,IAAI,EAAE,MAFR;EAGE;EACAC,SAAS,EAAE,MAAI,OAAO,oBAAP;AAJjB,CADa,EAOb;EACEF,IAAI,EAAE,SADR;EAEEC,IAAI,EAAE,MAFR;EAGEC,SAAS,EAAE,MAAI,OAAO,oBAAP;AAHjB,CAPa,EAYb;EACEF,IAAI,EAAE,QADR;EAEEC,IAAI,EAAE,OAFR;EAGEC,SAAS,EAAE,MAAI,OAAO,sBAAP,CAHjB;EAIEC,WAAW,EAAE,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;IAC/B,MAAM;MAACC;IAAD,IAAYC,YAAlB;IACAD,OAAO,GAAGD,IAAI,CAAC;MAACL,IAAI,EAAE;IAAP,CAAD,CAAP,GAA0BK,IAAI,EAArC;EACD;AAPH,CAZa,EAqBb;EACEN,IAAI,EAAE,WADR;EAEEC,IAAI,EAAE,UAFR;EAGEC,SAAS,EAAE,MAAI,OAAO,4BAAP,CAHjB;EAIEC,WAAW,EAAE,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;IAC/B,MAAM;MAACC;IAAD,IAAYC,YAAlB;IACAD,OAAO,GAAGD,IAAI,CAAC;MAACL,IAAI,EAAE;IAAP,CAAD,CAAP,GAA0BK,IAAI,EAArC;EACD;AAPH,CArBa,CAAf;AAgCA,MAAMG,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEZ,oBAAoB,EADH;EAE1BC;AAF0B,CAAD,CAA3B,C,CAKA;;AACAU,MAAM,CAACE,UAAP,CAAkB,CAACP,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAkB;EAClC,MAAM;IAACC;EAAD,IAAYC,YAAlB;EACA,MAAM;IAACP;EAAD,IAASG,EAAf;EACA,MAAMQ,iBAAiB,GAAIX,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,UAAxD,CAHkC,CAIlC;EACA;;EACCM,OAAO,IAAIK,iBAAZ,GAAiCN,IAAI,EAArC,GAA0CA,IAAI,CAAC;IAACL,IAAI,EAAE;EAAP,CAAD,CAA9C;AACD,CAPD;AASA,eAAeQ,MAAf"},"metadata":{},"sourceType":"module"}