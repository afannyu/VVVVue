{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2529d779\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"http://www.dell-lee.com/imgs/vue3/user.png\",\n  alt: \"\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"wrapper__input\"\n};\nconst _hoisted_4 = {\n  class: \"wrapper__input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Toast = _resolveComponent(\"Toast\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"wrapper__input__content\",\n    placeholder: \"请输入用户名\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.data.username = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.data.username]]), _createCommentVNode(\" 通过v-model这样的指令，\\r\\n      将input框的内容与data中的内容双向绑定 \")]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"wrapper__input__content\",\n    placeholder: \"请输入密码\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.data.password = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.data.password]])]), _createElementVNode(\"div\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.handleLogin && $setup.handleLogin(...args)),\n    class: \"wrapper__login-button\"\n  }, \"登录\"), _createElementVNode(\"div\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.handelRegister && $setup.handelRegister(...args)),\n    class: \"wrapper__login-link\"\n  }, \"注册\")]), $setup.toastData.showToast ? (_openBlock(), _createBlock(_component_Toast, {\n    key: 0,\n    message: $setup.toastData.toastMsg\n  }, null, 8\n  /* PROPS */\n  , [\"message\"])) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;gEACTC,oBAA+D,KAA/D,EAA+D;EAA1DC,GAAG,EAAC,4CAAsD;EAATC,GAAG,EAAC;AAAK,CAA/D;;AAAA;;;EACKH,KAAK,EAAC;;;EAUNA,KAAK,EAAC;;;;;6DAZbC,oBAsBM,KAtBN,cAsBM,CArBJG,UAqBI,EApBJH,oBASM,KATN,cASM,iBARJA,oBAKE,OALF,EAKE;IAJAI,IAAI,EAAC,MAIL;IAHAL,KAAK,EAAC,yBAGN;IAFAM,WAAW,EAAC,QAEZ;+DADSC,YAAKC,WAAQC;EACtB,CALF;;EAAA,kBAIWF,YAAKC,WAIZ,EAFJE,yEAEI,CATN,CAoBI,EAVJT,oBAOM,KAPN,cAOM,iBANJA,oBAKE,OALF,EAKE;IAJAI,IAAI,EAAC,UAIL;IAHAL,KAAK,EAAC,yBAGN;IAFAM,WAAW,EAAC,OAEZ;+DADSC,YAAKI,WAAQF;EACtB,CALF;;EAAA,kBAIWF,YAAKI,WAEZ,CAPN,CAUI,EAFJV,oBAAgE,KAAhE,EAAgE;IAA1DW,OAAK,yCAAEL,iDAAF,CAAqD;IAAtCP,KAAK,EAAC;EAAgC,CAAhE,EAAwD,IAAxD,CAEI,EADJC,oBAAiE,KAAjE,EAAiE;IAA3DW,OAAK,yCAAEL,uDAAF,CAAsD;IAApCP,KAAK,EAAC;EAA8B,CAAjE,EAAyD,IAAzD,CACI,CAtBN,GAuBaO,iBAAUM,2BAAvBC,aAAkEC,gBAAlE,EAAkE;UAAA;IAA/BC,OAAO,EAAET,iBAAUU;EAAY,CAAlE;;EAAA","names":["class","_createElementVNode","src","alt","_hoisted_2","type","placeholder","$setup","username","$event","_createCommentVNode","password","onClick","showToast","_createBlock","_component_Toast","message","toastMsg"],"sourceRoot":"","sources":["C:\\Carrie\\VVVVVue\\jingdong\\src\\views\\login\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <img src=\"http://www.dell-lee.com/imgs/vue3/user.png\" alt=\"\" />\r\n    <div class=\"wrapper__input\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"wrapper__input__content\"\r\n        placeholder=\"请输入用户名\"\r\n        v-model=\"data.username\"\r\n      />\r\n      <!-- 通过v-model这样的指令，\r\n      将input框的内容与data中的内容双向绑定 -->\r\n    </div>\r\n    <div class=\"wrapper__input\">\r\n      <input\r\n        type=\"password\"\r\n        class=\"wrapper__input__content\"\r\n        placeholder=\"请输入密码\"\r\n        v-model=\"data.password\"\r\n      />\r\n    </div>\r\n    <div @click=\"handleLogin\" class=\"wrapper__login-button\">登录</div>\r\n    <div @click=\"handelRegister\" class=\"wrapper__login-link\">注册</div>\r\n  </div>\r\n  <Toast v-if=\"toastData.showToast\" :message=\"toastData.toastMsg\" />\r\n</template>\r\n\r\n<script>\r\nimport { useRouter } from \"vue-router\";\r\nimport { reactive } from \"@vue/reactivity\";\r\nimport Toast, { useToastEffect } from \"../../components/Toast.vue\";\r\nimport { post } from \"../../utils/request\";\r\n\r\nexport default {\r\n  name: \"LoginView\",\r\n  setup() {\r\n    const router = useRouter();\r\n    // 执行该useToastEffect()函数，获取到该函数的返回值\r\n    const { toastData, showToast } = useToastEffect();\r\n    const data = reactive({\r\n      username: \"\",\r\n      password: \"\",\r\n    });\r\n    const handelRegister = () => {\r\n      router.push({ name: \"Register\" });\r\n    };\r\n    return {\r\n      handleLogin,\r\n      handelRegister,\r\n      data,\r\n      toastData,\r\n      showToast,\r\n    };\r\n  },\r\n  components: { Toast },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../style/viriables.scss\";\r\n\r\n.wrapper {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n  img {\r\n    display: block;\r\n    margin: 0 auto 0.4rem auto;\r\n    height: 0.66rem;\r\n    width: 0.66rem;\r\n  }\r\n  &__input {\r\n    margin: 0 0.4rem 0.16rem 0.4rem;\r\n    padding: 0 0.16rem;\r\n    height: 0.48rem;\r\n    background: #f9f9f9;\r\n    border: 0.01rem solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 6px;\r\n    &__content {\r\n      width: 100%;\r\n      border: none;\r\n      background: none;\r\n      outline: none;\r\n      line-height: 0.48rem;\r\n      color: $content-notice-fontcolor;\r\n      font-size: 0.16rem;\r\n      &::placeholder {\r\n        color: $content-notice-fontcolor;\r\n      }\r\n    }\r\n  }\r\n  &__login-button {\r\n    text-align: center;\r\n    margin: 0.32rem 0.4rem 0.16rem 0.4rem;\r\n    line-height: 0.48rem;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 145, 255, 0.32);\r\n    border-radius: 4px;\r\n    font-size: 0.16rem;\r\n    background: #0091ff;\r\n    color: #ffffff;\r\n  }\r\n  &__login-link {\r\n    font-size: 0.14rem;\r\n    text-align: center;\r\n    color: $content-notice-fontcolor;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}