{"ast":null,"code":"import axios from \"axios\";\nexport const post = (url, data = {}) => {\n  return new Promise((resolve, reject) => {\n    axios.post(url, data, {\n      // 一些其他的参数，比如设置headers的Content-Type类型\n      // 就不需要在login.vue中配置了\n      baseURL: 'https://www.fastmock.site/mock/4a01d3c1e70b246641548e2cc9e32657/jingdong',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      resolve(response.data);\n    }), err => {\n      reject(err);\n    };\n  });\n};\nexport const get = (url, data = {}) => {\n  return new Promise((resolve, reject) => {\n    axios.post(url, data, {\n      // 一些其他的参数，比如设置headers的Content-Type类型\n      // 就不需要在login.vue中配置了\n      baseURL: 'https://www.fastmock.site/mock/4a01d3c1e70b246641548e2cc9e32657/jingdong',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      resolve(response.data);\n    }), err => {\n      reject(err);\n    };\n  });\n};","map":{"version":3,"names":["axios","post","url","data","Promise","resolve","reject","baseURL","headers","then","response","err","get"],"sources":["C:/Carrie/VVVVVue/jingdong/src/utils/request.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const post = (url, data = {}) => {\r\n  return new Promise((resolve,reject)=>{\r\n    axios.post(url, data, {\r\n      // 一些其他的参数，比如设置headers的Content-Type类型\r\n      // 就不需要在login.vue中配置了\r\n      baseURL: 'https://www.fastmock.site/mock/4a01d3c1e70b246641548e2cc9e32657/jingdong',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((response)=>{\r\n      resolve(response.data)\r\n    }),err =>{\r\n      reject(err)\r\n    }\r\n  })\r\n}\r\n\r\nexport const get = (url, data = {}) => {\r\n  return new Promise((resolve,reject)=>{\r\n    axios.post(url, data, {\r\n      // 一些其他的参数，比如设置headers的Content-Type类型\r\n      // 就不需要在login.vue中配置了\r\n      baseURL: 'https://www.fastmock.site/mock/4a01d3c1e70b246641548e2cc9e32657/jingdong',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((response)=>{\r\n      resolve(response.data)\r\n    }),err =>{\r\n      reject(err)\r\n    }\r\n  })\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,IAAI,GAAG,EAAb,KAAoB;EACtC,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;IACnCN,KAAK,CAACC,IAAN,CAAWC,GAAX,EAAgBC,IAAhB,EAAsB;MACpB;MACA;MACAI,OAAO,EAAE,0EAHW;MAIpBC,OAAO,EAAE;QACP,gBAAgB;MADT;IAJW,CAAtB,EAOGC,IAPH,CAOSC,QAAD,IAAY;MAClBL,OAAO,CAACK,QAAQ,CAACP,IAAV,CAAP;IACD,CATD,GASGQ,GAAG,IAAG;MACPL,MAAM,CAACK,GAAD,CAAN;IACD,CAXD;EAYD,CAbM,CAAP;AAcD,CAfM;AAiBP,OAAO,MAAMC,GAAG,GAAG,CAACV,GAAD,EAAMC,IAAI,GAAG,EAAb,KAAoB;EACrC,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;IACnCN,KAAK,CAACC,IAAN,CAAWC,GAAX,EAAgBC,IAAhB,EAAsB;MACpB;MACA;MACAI,OAAO,EAAE,0EAHW;MAIpBC,OAAO,EAAE;QACP,gBAAgB;MADT;IAJW,CAAtB,EAOGC,IAPH,CAOSC,QAAD,IAAY;MAClBL,OAAO,CAACK,QAAQ,CAACP,IAAV,CAAP;IACD,CATD,GASGQ,GAAG,IAAG;MACPL,MAAM,CAACK,GAAD,CAAN;IACD,CAXD;EAYD,CAbM,CAAP;AAcD,CAfM"},"metadata":{},"sourceType":"module"}