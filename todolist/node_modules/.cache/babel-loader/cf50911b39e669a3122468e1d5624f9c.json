{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputValue = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.inputValue]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.handleClick && $setup.handleClick(...args))\n  }, \"增加\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.list, item => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: item\n    }, [_createElementVNode(\"li\", null, _toDisplayString(item), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;6EACEA,oBAA6B,OAA7B,EAA6B;+DAAbC,oBAAUC;EAAG,CAA7B;;EAAA,kBAAgBD,sBAChBD,oBAAwC,QAAxC,EAAwC;IAA/BG,OAAK,yCAAEF,iDAAF;EAA0B,CAAxC,EAA6B,IAA7B,sBACAG,oBAEKC,SAFL,EAEK,IAFL,EAEKC,YAFcL,WAEd,EAFMM,IAAY,IAAR;yBAAfH,oBAEK,IAFL,EAEK;MAFqBI,GAAG,EAAED;IAE1B,CAFL,EAAmC,CACjCP,oBAAiB,IAAjB,EAAiB,IAAjB,EAAiBS,iBAAXF,IAAW,CAAjB,EAAU;IAAA;IAAV,CADiC,CAAnC;GAEK,CAFL;;EAAA","names":["_createElementVNode","$setup","$event","onClick","_createElementBlock","_Fragment","_renderList","item","key","_toDisplayString"],"sourceRoot":"","sources":["C:\\Carrie\\demo\\src\\App.vue"],"sourcesContent":["<template>\n  <input v-model=\"inputValue\"/>\n  <button @click=\"handleClick\">增加</button>\n  <ul v-for=\"item of list\" :key=\"item\">\n    <li>{{item}}</li>\n  </ul>\n</template>\n\n<script>\nimport { reactive, ref } from '@vue/reactivity'\nexport default {\n  name: 'App',\n  setup() {\n    const inputValue = ref('')\n    let list = reactive([])\n    const handleClick = ()=>{\n      list.push(inputValue.value)\n      // inputValue.value = ''\n    }\n    // const handleInput = ()=>{\n\n    // }\n    return {\n      inputValue,list,\n      handleClick\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module"}