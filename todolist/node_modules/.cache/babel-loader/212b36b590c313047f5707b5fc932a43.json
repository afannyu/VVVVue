{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.inputValue = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => _ctx.handleInput && _ctx.handleInput(...args))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, _ctx.inputValue]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, \"增加\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.list, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item\n    }, _toDisplayString(item), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;6EACEA,oBAAkD,OAAlD,EAAkD;+DAAlCC,kBAAUC,OAAwB;IAArBC,OAAK,yCAAEF,6CAAF;EAAgB,CAAlD;;EAAA,kBAAgBA,oBAChBD,oBAAwC,QAAxC,EAAwC;IAA/BI,OAAK,yCAAEH,6CAAF;EAA0B,CAAxC,EAA6B,IAA7B,sBACAI,oBAAoDC,SAApD,EAAoD,IAApD,EAAoDC,YAAhCN,SAAgC,EAAxCO,IAAY,IAAR;yBAAhBH,oBAAoD,KAApD,EAAoD;MAAzBI,GAAG,EAAED;IAAoB,CAApD,EAAoCE,iBAAIF,IAAJ,CAApC,EAA4C;IAAA;IAA5C;GAAoD,CAApD;;EAAA","names":["_createElementVNode","_ctx","$event","onInput","onClick","_createElementBlock","_Fragment","_renderList","item","key","_toDisplayString"],"sourceRoot":"","sources":["C:\\Carrie\\demo\\src\\App.vue"],"sourcesContent":["<template>\n  <input v-model=\"inputValue\" @input=\"handleInput\"/>\n  <button @click=\"handleClick\">增加</button>\n  <div v-for=\"item of list\" :key=\"item\">{{item}}</div>\n</template>\n\n<script>\nimport { reactive, ref } from '@vue/reactivity'\nexport default {\n  name: 'App',\n  setup() {\n    const inputValue = ref('')\n    let list = reactive('')\n    const handleClick = ()=>{\n\n    }\n    const handleInput = ()=>{\n      \n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module"}